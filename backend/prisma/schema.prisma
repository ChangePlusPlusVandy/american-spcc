generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum RESOURCE_TYPE {
  PDF
  TXT
  VIDEO 
  WEBINAR
  WEBPAGE
  INTERACTIVE_QUIZ
  OTHER
}

enum HOSTING_TYPE {
  INTERNAL
  EXTERNAL
  OTHER
}

enum CATEGORY_TYPE {
  PARENTING_SKILLS_RELATIONSHIPS
  CHILD_DEVELOPMENT
  MENTAL_EMOTIONAL_HEALTH
  SAFETY_PROTECTION
  EDUCATION_LEARNING
  HEALTH_WELLBEING
  LIFE_SKILLS_INDEPENDENCE
  FAMILY_SUPPORT_COMMUNITY
}

enum AGE_GROUP {
  AGE_0_3
  AGE_4_7
  AGE_8_12
  TEEN
  OTHER
}

enum LANGUAGE {
  ENGLISH
  SPANISH
  CHINESE
  OTHER
}

model CategoryLabel {
  id          String         @id @default(cuid())
  label_name  String
  category    CATEGORY_TYPE
  resources   ResourceLabel[]
  @@map("categorylabel")
}

model Resource {
  id          String         @id @default(cuid())
  title         String
  description   String?
  resource_type RESOURCE_TYPE
  hosting_type  HOSTING_TYPE
  category      CATEGORY_TYPE
  age_group     AGE_GROUP
  language      LANGUAGE
  time_to_read  Int
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  labels        ResourceLabel[]
  @@map("resource")
}

model ResourceLabel {
  id          String         @id @default(cuid())
  resource_id String
  label_id    String
  resource Resource      @relation(fields: [resource_id], references: [id])
  label    CategoryLabel @relation(fields: [label_id], references: [id])
  @@unique([resource_id, label_id])
  @@map("resourcelabel")
}

model ExternalResources {
  id           String         @id @default(cuid())
  resource_fk  String
  external_url String
  resource     Resource     @relation(fields: [resource_fk], references: [id])
  @@map("externalResources)
}

enum ROLE {
  PARENT
  ADMIN
}

model User {
  id         String   @id @default(cuid())
  clerk_id   String   @unique
  role       ROLE     @default(PARENT)
  first_name String
  last_name  String
  email      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  @@map("user")
}